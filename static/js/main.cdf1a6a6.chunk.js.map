{"version":3,"sources":["components/data/tileData.js","components/data/images/photo1.JPG","components/PictureGrid.js","components/NavigationBar.js","App.js","reportWebVitals.js","index.js"],"names":["tileData","img","title","author","cols","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","PictureGrid","classes","className","GridList","cellHeight","map","tile","GridListTile","src","alt","StyledTabs","withStyles","indicator","maxWidth","props","Tabs","TabIndicatorProps","children","StyledTab","textTransform","color","fontWeight","typography","fontWeightRegular","fontSize","pxToRem","marginRight","spacing","opacity","Tab","disableRipple","StyledAppBar","AppBar","flexGrow","padding","nav","NavigationBar","React","useState","value","setValue","onChange","event","newValue","aria-label","centered","label","icon","Info","Subject","GitHub","PhotoCamera","Typography","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdf1a6a6.chunk.js","sourcesContent":["import photo1 from './images/photo1.JPG'\r\n\r\nexport const tileData = [\r\n    {\r\n        img: photo1,\r\n        title: 'Image',\r\n        author: 'author',\r\n        cols: 1,\r\n    },\r\n]","export default __webpack_public_path__ + \"static/media/photo1.a8fd2550.JPG\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport { tileData } from './data/tileData'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 1960,\r\n    height: 1080,\r\n  },\r\n}));\r\n\r\nexport default function PictureGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={1000} className={classes.gridList} cols={1}>\r\n        {tileData.map((tile) => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1}>\r\n            <img src={tile.img} alt={tile.title} />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Tab, Tabs, Typography } from '@material-ui/core'\r\nimport { Info, Subject, GitHub, PhotoCamera } from '@material-ui/icons'\r\nimport PictureGrid from './PictureGrid'\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'transparent',\r\n    '& > span': {\r\n      maxWidth: 40,\r\n      width: '100%',\r\n      backgroundColor: '#65837F',\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    color: '#fff',\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: theme.typography.pxToRem(15),\r\n    marginRight: theme.spacing(1),\r\n    '&:focus': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst StyledAppBar = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: '#142021'\r\n    },\r\n  }))((props) => <AppBar {...props} />);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  nav: {\r\n    backgroundColor: '#142021',\r\n  },\r\n}));\r\n\r\nexport default function NavigationBar() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.nav}>\r\n          <StyledAppBar>\r\n            <StyledTabs value={value} onChange={handleChange} aria-label=\"styled tabs example\" centered>\r\n                <StyledTab label=\"About Me\" icon={<Info />}/>\r\n                <StyledTab label=\"Resume\" icon={<Subject />}/>\r\n                <StyledTab label=\"GitHub\" icon={<GitHub />}/>\r\n                <StyledTab label=\"Photos\" icon={<PhotoCamera />}/>\r\n            </StyledTabs>\r\n          </StyledAppBar>\r\n        <Typography className={classes.padding} />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport './App.css'\r\nimport NavigationBar from './components/NavigationBar'\r\nimport PictureGrid from './components/PictureGrid'\r\n\r\nexport default function App() {\r\n  return (\r\n    <React.Fragment>\r\n        <NavigationBar />\r\n        <PictureGrid />\r\n    </React.Fragment>\r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}